{"version":3,"sources":["components/Nav.js","utils/production.js","pages/Intro/index.js","pages/Upload/components/dropZone.js","components/Popup.js","components/CategoryPopup.js","services/apiService.js","services/categorySearchService.js","pages/Upload/index.js","pages/Processing/components/Modified.js","utils/api.js","services/cropNSaveService.js","pages/Processing/index.js","services/downloadXLSXService.js","pages/Download/index.js","components/Footer.js","Routes.js","index.js"],"names":["Nav","NavContainer","to","LogoContainer","Component","withRouter","styled","div","repo","Intro","state","IntroContainer","SepLine","ProjDesc","SignInUp","DropZone","props","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","readedData","XLSX","type","wsname","SheetNames","ws","Sheets","dataParse","sheet_to_json","header","localforage","setItem","readAsBinaryString","useDropzone","accept","getRootProps","getInputProps","files","map","key","path","size","className","Popup","containerEl","document","createElement","externalWindow","sourceDoc","targetDoc","this","window","open","body","appendChild","title","name","Array","from","querySelectorAll","link","newLink","href","head","cloneNode","addEventListener","closed","close","ReactDOM","createPortal","children","React","CategoryPopup","findCategory","enterCategory","search","filteredCategory","select","selected","setCategory","placeholder","onChange","e","onKeyUp","onClick","length","c","justQCategoryXLSX","Promise","resolve","reject","fetch","then","res","arrayBuffer","workbook","category","shift","categorySearch","input","categoryName","categoryNum","i","push","trim","includes","split","w","isNaN","eachCategory","filter","concat","toString","Set","idx","newCategory","Upload","componentDidMount","setInterval","setState","counter","active","popup","whichRow","Number","target","value","slice","row","alert","chosen","callBack","fetchCateNum","el","indexOf","justQAPi","json","catch","err","categoryAPI","setRowNNext","a","getItem","history","dropActive","UploadContainer","TitleContainer","Choices","SelectBox","BoxTitle","UploadMethod","Chosen","Modified","categoryList","newSetKeywords","ogKeyword","chosenKeywords","hint","currMilli","Date","now","hints","join","headers","process","crypto","createHmac","update","digest","useful","l","keywordList","monthlyAveMobileClkCnt","keywordsAPI","fetchedKeywords","changeValue","which","setNewNameInput","newNameInput","setNewName","newName","nameInput","findNameInput","enterFindNewName","findNewName","method","mode","Accept","foundRelName","rel","foundRecName","rec","chooseKeywords","keyword","splice","setNewKeywords","newCategoryInput","selectedCategory","newCategoryName","newCategoryCode","newOrigin","ogName","ogCategoryCode","ogCategoryName","ogOrigin","onComplete","AsideContainer","AsideTitle","ref","checked","relKeyword","monthlyAvePcClkCnt","ModComplete","aside","button","createS3Album","AWS","config","region","credentials","CognitoIdentityCredentials","IdentityPoolId","s3","S3","apiVersion","params","Bucket","albumName","replace","albumKey","headObject","Key","data","code","message","putObject","createAlbum","addPhoto2S3","fileData","dataURI","binary","atob","array","charCodeAt","Blob","Uint8Array","dataURItoBlob","photoKey","upload","ContentType","Body","ACL","Location","promise","addImgs2S3","imgUrl","img","s3Url","all","url","Processing","column","onscroll","scrollTo","raw","newState","modNode","rawHTML","innerHTML","len","getElementsByTagName","incrementCounter","html2Image","complete","htmlToImage","toPng","dataUrl","getElementById","src","ogDetailUrl","loading","style","display","error","onImageLoaded","image","imageRef","onCropComplete","crop","croppedImageCoord","croppedImageUrl","x","y","width","height","makeClientCrop","cropCoord","originalCoord","onCropChange","deleteCropped","newUrlArr","newCoordArr","deleteAll","mod","newColumn","categoryCode","origin","orgDetailUrl","relCoord","croppedImg","uploading","scrollY","newSetKeyword","modifiedData","aspect","getCroppedImg","canvas","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","toDataURL","ProcessingContainer","Loading","WhichRow","Original","OrigData","Title","Detail","DetailBox","DetailImg","id","ruleOfThirds","DetailHTML","ScannedImg","cropped","alt","h1","workBook","book_new","workSheet","json_to_sheet","skipHeader","book_append_sheet","clear","Download","nextRow","DownloadContainer","ButtonContainer","downloadXLSX","JSON","stringify","Footer","FooterContainer","Routes","exact","component","Signup","render"],"mappings":"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","file":"static/js/main.a094a036.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport styled from \"styled-components\";\n\nclass Nav extends Component {\n  render() {\n    return (\n      <NavContainer>\n        <Link to={`/`}>\n          <LogoContainer />\n        </Link>\n        <span>상품가공 프로젝트</span>\n      </NavContainer>\n    );\n  }\n}\n\nexport default withRouter(Nav);\n\nconst NavContainer = styled.div`\n  height: 10vh;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgb(42, 73, 97);\n  color: white;\n  span {\n    font-size: 40px;\n    font-weight: bolder;\n  }\n  a {\n    position: absolute;\n    left: 50px;\n  }\n`;\n\nconst LogoContainer = styled.div`\n  width: 110px;\n  height: 70px;\n  background-image: url(\"https://justq.cafe24.com/wp-content/uploads/2020/07/logo_final_w-1.png\");\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n","//can move these variables to .env\n\nexport const githubUser = \"MSL-J.github.io\";\n\nexport const repo = \"/JQ_merch\";\n","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { repo } from \"utils/production\";\nimport styled from \"styled-components\";\n\nclass Intro extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <IntroContainer>\n        <LogoContainer />\n        <SepLine />\n        <ProjDesc>\n          Just Q에서 개발한 상품가공 시스템의 prototype입니다.\n        </ProjDesc>\n        <SignInUp>\n          <Link to={`${repo}/upload`}>\n            <button>로그인</button>\n          </Link>\n          <Link>\n            <button>회원가입</button>\n          </Link>\n        </SignInUp>\n      </IntroContainer>\n    );\n  }\n}\n\nexport default withRouter(Intro);\n\nconst IntroContainer = styled.div`\n  width: 60%;\n  height: 60vh;\n  margin: 10vh auto 0;\n  display: flex;\n  justify-content: space-evenly;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n  border-radius: 25px;\n`;\n\nconst LogoContainer = styled.div`\n  width: 200px;\n  height: 200px;\n  background-image: url(\"https://www.aitimes.com/news/photo/201910/120047_115127_4113.png\");\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nconst SepLine = styled.div`\n  width: 80%;\n  height: 2px;\n  border-bottom: 3px solid rgb(239, 239, 239);\n  margin: 0 auto;\n`;\n\nconst ProjDesc = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 15px;\n  font-weight: 600;\n`;\n\nconst SignInUp = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  width: 90%;\n  button {\n    width: 200px;\n    height: 50px;\n    border-radius: 10px;\n    font-size: 20px;\n    color: steelblue;\n  }\n`;\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport * as XLSX from \"xlsx\";\nimport localforage from \"localforage\";\nimport \"./dropZone.css\";\n\nfunction DropZone(props) {\n  const onDrop = useCallback((acceptedFiles) => {\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n\n        let readedData = XLSX.read(binaryStr, { type: \"binary\" });\n        const wsname = readedData.SheetNames[0];\n        const ws = readedData.Sheets[wsname];\n\n        /* Convert array to json*/\n        const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 });\n        localforage.setItem(\"data\", dataParse);\n      };\n\n      reader.readAsBinaryString(file);\n    });\n  }, []);\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    accept:\n      \"application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    onDrop,\n  });\n\n  const files = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>드랍하거나 클릭하세요</p>\n      </div>\n      <aside>\n        <h4>선택한 파일</h4>\n        <ul>{files}</ul>\n      </aside>\n    </section>\n  );\n}\n\nexport default DropZone;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    // STEP 1: create a container <div>\n    this.containerEl = document.createElement(\"div\");\n    this.externalWindow = null;\n  }\n\n  componentDidMount() {\n    // STEP 3: open a new browser window and store a reference to it\n    this.externalWindow = window.open(\n      ``,\n      \"\",\n      \"width=600,height=400,left=200,top=200\"\n    );\n\n    // STEP 4: append the container <div> (that has props.children appended to it) to the body of the new window\n    this.externalWindow.document.body.appendChild(this.containerEl);\n    this.externalWindow.document.title = this.props.name;\n\n    // Applying(appending) styles to all new windows\n    function copyStyles(sourceDoc, targetDoc) {\n      Array.from(sourceDoc.querySelectorAll('link[rel=\"stylesheet\"]')).forEach(\n        (link) => {\n          let newLink = link;\n          newLink.href = link.href;\n          targetDoc.head.appendChild(newLink.cloneNode(true));\n        }\n      );\n      Array.from(sourceDoc.querySelectorAll(\"style\")).forEach((link) => {\n        targetDoc.head.appendChild(link.cloneNode(true));\n      });\n    }\n    copyStyles(document, this.externalWindow.document);\n\n    // update the state in the parent component if the user closes the new window\n    this.externalWindow.addEventListener(\"beforeunload\", () => {\n      this.props.closed();\n    });\n  }\n\n  componentWillUnmount() {\n    // STEP 5: This will fire when this.state.showWindowPortal in the parent component becomes false\n    // So we tidy up by closing the window\n    this.externalWindow.close();\n  }\n\n  render() {\n    // STEP 2: append props.children to the container <div> that isn't mounted anywhere yet\n    return ReactDOM.createPortal(this.props.children, this.containerEl);\n  }\n}\n\nexport default withRouter(Popup);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Popup from \"components/Popup\";\nimport \"./categoryPopup.scss\";\n\nclass CategoryPopup extends Component {\n  render() {\n    const {\n      close,\n      findCategory,\n      enterCategory,\n      search,\n      filteredCategory,\n      select,\n      selected,\n      setCategory,\n    } = this.props;\n    return (\n      <Popup closed={() => close()} name=\"카테고리 검색\">\n        <div className=\"categoryPopup\">\n          <div className=\"popupTitle\">저스트큐 카테고리</div>\n          <div className=\"searchBox\">\n            <span>\n              {`카테고리명이나 카테고리 코드로 검색 가능합니다. (교차검색 가능, & = 'and', + = 'or')`}\n            </span>\n            <input\n              placeholder=\"ex) 패션 + 77906\"\n              onChange={(e) => {\n                findCategory(e);\n              }}\n              onKeyUp={(e) => {\n                enterCategory(e);\n              }}\n            ></input>\n            <button\n              onClick={() => {\n                search();\n              }}\n            >\n              검색\n            </button>\n          </div>\n          <div className=\"resultBox\">\n            {filteredCategory.length ? (\n              filteredCategory.map((c) => {\n                return (\n                  <div\n                    onClick={() => {\n                      select(c);\n                    }}\n                  >\n                    {c}\n                  </div>\n                );\n              })\n            ) : (\n              <p> 검색값을 입력해주세요</p>\n            )}\n          </div>\n          <div className=\"buttonContainer\">\n            {selected ? <div>{selected}</div> : \"카테고리를 선택해 주세요\"}\n            <button\n              onClick={() => {\n                setCategory();\n              }}\n            >\n              불러오기\n            </button>\n          </div>\n        </div>\n      </Popup>\n    );\n  }\n}\n\nexport default withRouter(CategoryPopup);\n","import crypto from \"crypto\";\nimport localforage from \"localforage\";\nimport * as XLSX from \"xlsx\";\nimport { justQAPi, crawlingAPI } from \"utils/api\";\n\nexport function categoryAPI(selected, category, callBack) {\n  /* changing category name to corresponding category number,\n  assuming that fetching is done through category number */\n  let fetchCateNum = category.map((el) => el[1])[\n    category.map((el) => el[0]).indexOf(selected)\n  ];\n  fetch(justQAPi + \"?category=\" + fetchCateNum)\n    .then((res) => res.json())\n    .then((res) => {\n      localforage.setItem(\"data\", res, () => {\n        callBack();\n      });\n    })\n    .catch((err) => {\n      alert(\"카테고리에 해당하는 데이터를 불러오는데 실패했습니다: \", err);\n      console.log(\"category fetch failed: \", err);\n      callBack();\n    });\n}\n\nexport function keywordsAPI(hint) {\n  let currMilli = Date.now();\n  let hints = [];\n  hint\n    .split(\",\")\n    .slice(0, 5)\n    .forEach((el) => {\n      hints.push(el.trim());\n    });\n  hint = hints.join(\",\");\n\n  return new Promise(function (resolve, reject) {\n    fetch(\n      `https://cors-anywhere.herokuapp.com/https://api.naver.com/keywordstool?hintKeywords=${hint}&showDetail=1`,\n      {\n        headers: {\n          \"X-API-KEY\": process.env.REACT_APP_API_KEY,\n          \"X-Signature\": crypto\n            .createHmac(\"sha256\", process.env.REACT_APP_SECRET_KEY)\n            .update(`${currMilli}.GET./keywordstool`)\n            .digest(\"base64\"),\n          \"X-Customer\": process.env.REACT_APP_CUSTOMER,\n          \"X-Timestamp\": currMilli,\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        let useful = [];\n        let l = res.keywordList.length;\n        for (let i = 0; i < l; i++) {\n          res.keywordList[i].monthlyAveMobileClkCnt > 40 &&\n            useful.push(res.keywordList[i]);\n        }\n        resolve(useful);\n      });\n  });\n}\n\nexport function send2ServerAPI() {\n  Promise.resolve(\n    fetch(justQAPi + `/newData`, {\n      method: \"POST\",\n      body: JSON.stringify(localforage.getItem(\"data\")),\n    })\n  )\n    .then(() => {\n      alert(\"데이터 저장 성공\");\n      console.log(\"데이터 저장 성공\");\n      localforage.clear();\n      /* delete locally saved data ONLY when posting is resolved\n      because the user might want to continue when rejected */\n    })\n    .catch((err) => {\n      alert(\"데이터를 서버에 저장하는데 실패했습니다: \", err);\n      console.log(\"posting data rejected: \", err);\n    });\n}\n\nexport function nameCrawlingApi(input) {\n  return new Promise((resolve, reject) => {\n    fetch(`${crawlingAPI}getNaverName?searchWord=${input.trim()}`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => {\n      resolve(res.json());\n    });\n  });\n}\n\nexport function justQCategoryXLSX() {\n  return new Promise((resolve, reject) => {\n    fetch(\"Category.xlsx\")\n      .then((res) => res.arrayBuffer())\n      .then((res) => {\n        let file = XLSX.read(res, { type: \"array\" });\n        const workbook = file.Sheets[file.SheetNames[0]];\n        const category = XLSX.utils.sheet_to_json(workbook, { header: 1 });\n        category.shift();\n        resolve(category);\n      });\n  });\n}\n","export function categorySearch(category, input) {\n  return new Promise((resolve, reject) => {\n    let categoryName = [];\n    let categoryNum = [];\n    for (let i in category) {\n      categoryName.push(category[i][0]);\n      categoryNum.push(category[i][1]);\n    }\n\n    input = input.trim();\n    let filteredCategory = [];\n    if (input.includes(\"+\")) {\n      //'+' works as 'or'\n      let eachInput = input.split(\"+\");\n      eachInput.forEach((w) => {\n        w = w.trim();\n        if (isNaN(w)) {\n          let eachCategory = categoryName.filter((c) => {\n            return c.includes(w);\n          });\n\n          filteredCategory = filteredCategory.concat(eachCategory);\n        } else {\n          for (let i in categoryNum) {\n            categoryNum[i].toString().includes(w) &&\n              filteredCategory.push(categoryName[i]);\n          }\n        }\n      });\n      filteredCategory = [...new Set(filteredCategory)]; //delete duplicates\n    } else if (input.includes(\"&\")) {\n      // '&' works as 'and'\n      let eachInput = input.split(\"&\");\n      eachInput.forEach((w, idx) => {\n        w = w.trim();\n        if (idx === 0) {\n          if (isNaN(w)) {\n            let eachCategory = categoryName.filter((c) => {\n              return c.includes(w);\n            });\n            filteredCategory = filteredCategory.concat(eachCategory);\n          } else {\n            for (let i in categoryNum) {\n              categoryNum[i].toString().includes(w) &&\n                filteredCategory.push(categoryName[i]);\n            }\n          }\n        } else {\n          if (isNaN(w)) {\n            filteredCategory = filteredCategory.filter((c) => {\n              return c.includes(w);\n            });\n          } else {\n            let newCategory = [];\n            for (let i in categoryNum) {\n              categoryNum[i].toString().includes(w) &&\n                filteredCategory.includes(categoryName[i]) &&\n                newCategory.push(categoryName[i]);\n            }\n            filteredCategory = newCategory;\n          }\n        }\n      });\n    } else {\n      if (isNaN(input)) {\n        filteredCategory = categoryName.filter((c) => {\n          return c.includes(input);\n        });\n      } else {\n        for (let i in categoryNum) {\n          categoryNum[i].toString().includes(input) &&\n            filteredCategory.push(categoryName[i]);\n        }\n      }\n    }\n    resolve(filteredCategory);\n  });\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport DropZone from \"./components/dropZone\";\nimport localforage from \"localforage\";\nimport CategoryPopup from \"components/CategoryPopup\";\nimport { categoryAPI, justQCategoryXLSX } from \"services/apiService\";\nimport { repo } from \"utils/production\";\nimport { categorySearch } from \"services/categorySearchService\";\nimport styled from \"styled-components\";\n\nclass Upload extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0,\n      dropActive: false,\n      popup: false,\n      category: null,\n      row: \"\",\n      input: \"\",\n      filteredCategory: [],\n      selected: \"\",\n      chosen: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    window.setInterval(() => {\n      this.setState({\n        counter: this.state.counter + 1,\n      });\n    }, 1000);\n\n    justQCategoryXLSX().then((category) => {\n      this.setState({\n        category,\n      });\n    });\n\n    window.addEventListener(\"beforeunload\", () => {\n      this.close();\n    });\n  };\n\n  active = (input) => {\n    this.setState({\n      [input]: !this.state[input],\n    });\n  };\n\n  close = () => {\n    this.setState({\n      popup: false,\n    });\n  };\n\n  whichRow = (e) => {\n    (!isNaN(Number(e.target.value)) &&\n      Number(e.target.value) >= 1 &&\n      e.target.value.slice(-1) !== \" \") ||\n    e.target.value === \"\"\n      ? this.setState({\n          row: Number(e.target.value),\n        })\n      : alert(\"1 이상의 숫자를 입력해 주세요\");\n  };\n\n  findCategory = (e, search) => {\n    this.setState(\n      {\n        input: e.target.value,\n      },\n      () => {\n        search && this.search();\n      }\n    );\n  };\n\n  enterCategory = (e) => {\n    e.key === \"Enter\" && this.findCategory(e, true);\n  };\n\n  search = () => {\n    let { category, input } = this.state;\n    categorySearch(category, input).then((filteredCategory) => {\n      this.setState({\n        filteredCategory,\n      });\n    });\n  };\n\n  select = (c) => {\n    this.setState({\n      selected: c,\n    });\n  };\n\n  setCategory = () => {\n    const { selected, category } = this.state;\n    selected &&\n      this.setState(\n        {\n          chosen: selected,\n        },\n        () => {\n          categoryAPI(selected, category, this.close);\n        }\n      );\n  };\n\n  setRowNNext = async () => {\n    let data = await localforage.getItem(\"data\");\n    data\n      ? await localforage.setItem(\n          \"row\",\n          this.state.row ? this.state.row : 1,\n          () => {\n            this.props.history.push(`${repo}/processing`);\n          }\n        )\n      : alert(\"파일을 먼저 업로드 해주세요\");\n  };\n\n  render() {\n    const {\n      row,\n      dropActive,\n      popup,\n      filteredCategory,\n      selected,\n      chosen,\n    } = this.state;\n    return (\n      <UploadContainer>\n        <TitleContainer>작업할 상품 업로드</TitleContainer>\n        <Choices>\n          <SelectBox>\n            <BoxTitle>액셀 (플레이오토 양식)</BoxTitle>\n            <UploadMethod>\n              {dropActive ? (\n                <DropZone />\n              ) : (\n                <button onClick={() => this.active(\"dropActive\")}>\n                  파일 선택하기\n                </button>\n              )}\n              <button onClick={() => this.setRowNNext()}>업로드 하기</button>\n            </UploadMethod>\n            <input\n              value={row}\n              onChange={(e) => this.whichRow(e)}\n              placeholder=\"시작하고 싶은 row를 입력해주세요. default: 1\"\n            ></input>\n          </SelectBox>\n          <SelectBox>\n            <BoxTitle>저스트큐 서버</BoxTitle>\n            <UploadMethod>\n              <button onClick={() => this.active(\"popup\")}>\n                카테고리 선택하기\n              </button>\n              {popup && (\n                <CategoryPopup\n                  close={() => this.close()}\n                  findCategory={(e) => this.findCategory(e)}\n                  enterCategory={(e) => {\n                    this.enterCategory(e);\n                  }}\n                  search={() => {\n                    this.search();\n                  }}\n                  filteredCategory={filteredCategory}\n                  select={(c) => {\n                    this.select(c);\n                  }}\n                  selected={selected}\n                  setCategory={() => {\n                    this.setCategory();\n                  }}\n                />\n              )}\n              <button onClick={() => this.setRowNNext()}>업로드 하기</button>\n            </UploadMethod>\n            {chosen && <Chosen>{chosen}</Chosen>}\n          </SelectBox>\n        </Choices>\n      </UploadContainer>\n    );\n  }\n}\n\nexport default withRouter(Upload);\n\nconst UploadContainer = styled.div`\n  width: 60%;\n  margin: 5vh auto 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: white;\n  border-radius: 25px;\n`;\n\nconst TitleContainer = styled.div`\n  margin: 5vh auto 0;\n  font-size: 34px;\n  font-weight: 600;\n`;\n\nconst Choices = styled.div`\n  width: 70%;\n  margin-top: 8vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst SelectBox = styled.div`\n  border: 1px solid black;\n  border-radius: 10px;\n  margin-bottom: 10%;\n  input {\n    margin: 0 0 10px 20px;\n    padding-left: 5px;\n    width: 300px;\n  }\n`;\n\nconst BoxTitle = styled.div`\n  height: 32px;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  padding-left: 10px;\n  background-color: steelblue;\n  font-size: 20px;\n  color: white;\n`;\n\nconst UploadMethod = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin: 5% 0;\n  button {\n    height: 50px;\n    width: 170px;\n    border-radius: 10px;\n    font-size: 20px;\n    color: steelblue;\n  }\n`;\n\nconst Chosen = styled.div`\n  margin: 0 0 10px 20px;\n`;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Popup from \"components/Popup\";\nimport {\n  keywordsAPI,\n  nameCrawlingApi,\n  justQCategoryXLSX,\n} from \"../../../services/apiService\";\nimport { categorySearch } from \"services/categorySearchService\";\nimport CategoryPopup from \"components/CategoryPopup\";\nimport \"./namePopup.scss\";\nimport \"./keywordPopup.scss\";\nimport styled from \"styled-components\";\n\nclass Modified extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      categoryList: {},\n      name: false,\n      keyword: false,\n      category: false,\n      findNameInput: \"\",\n      foundRelName: [],\n      foundRecName: [],\n      newNameInput: \"\",\n      newName: [],\n      newCategoryCode: null,\n      newCategoryInput: \"\",\n      filteredCategory: [],\n      selectedCategory: \"\",\n      newCategoryName: \"\",\n      newOrigin: \"\",\n      fetchedKeywords: [],\n      chosenKeywords: [],\n      newSetKeywords: [],\n    };\n  }\n\n  componentDidMount = () => {\n    window.addEventListener(\"beforeunload\", () => {\n      this.close(\"name\");\n      this.close(\"keyword\");\n      this.close(\"category\");\n    });\n\n    window.setInterval(() => {\n      this.setState({\n        counter: this.state.counter + 1,\n      });\n    }, 1000);\n\n    justQCategoryXLSX().then((categoryList) => {\n      this.setState({\n        categoryList,\n      });\n    });\n  };\n\n  close = (popup) => {\n    this.setState({\n      [popup]: false,\n    });\n  };\n\n  active = (popup) => {\n    const { newSetKeywords } = this.state;\n    const { ogKeyword } = this.props;\n    this.setState({\n      [popup]: true,\n    });\n    popup === \"keyword\" && !newSetKeywords.length\n      ? keywordsAPI(ogKeyword).then((res) => {\n          this.setState({\n            fetchedKeywords: res,\n            chosenKeywords: newSetKeywords,\n          });\n        })\n      : this.setState({\n          chosenKeywords: newSetKeywords,\n        });\n  };\n\n  changeValue = (e, which) => {\n    this.setState({\n      [`new${which}`]: e.target.value,\n    });\n  };\n\n  setNewNameInput = (e) => {\n    this.setState({\n      newNameInput: e.target.value,\n    });\n  };\n\n  setNewName = () => {\n    const { newName, newNameInput } = this.state;\n    newNameInput && newName.length < 5\n      ? this.setState({\n          newName: [...newName, newNameInput],\n          newNameInput: \"\",\n        })\n      : alert(\"수정 상품명은 최대 5개까지 가능합니다\");\n    this.nameInput.value = \"\";\n  };\n\n  findNameInput = (e) => {\n    this.setState({\n      findNameInput: e.target.value,\n    });\n  };\n\n  enterFindNewName = (e) => {\n    e.key === \"Enter\" && this.findNewName();\n  };\n\n  findNewName = () => {\n    const { findNameInput } = this.state;\n    findNameInput\n      ? nameCrawlingApi(findNameInput)\n          .then((res) => {\n            this.setState({\n              foundRelName: res.rel,\n              foundRecName: res.rec,\n            });\n          })\n          .catch((err) => {\n            console.log(err);\n            alert(\"서버로부터 데이터를 불러오는데 실패하였습니다: \", err);\n          })\n      : alert(\"검색단어를 입력해주세요\");\n  };\n\n  chooseKeywords = (keyword) => {\n    let { chosenKeywords } = this.state;\n    chosenKeywords.includes(keyword)\n      ? chosenKeywords.splice(chosenKeywords.indexOf(keyword), 1)\n      : (chosenKeywords = [...chosenKeywords, keyword]);\n    this.setState({\n      chosenKeywords,\n    });\n  };\n\n  setNewKeywords = () => {\n    const { chosenKeywords } = this.state;\n    this.setState(\n      {\n        newSetKeywords: chosenKeywords,\n      },\n      () => {\n        this.close(\"keyword\");\n      }\n    );\n  };\n\n  findCategory = (e, search) => {\n    this.setState(\n      {\n        newCategoryInput: e.target.value,\n      },\n      () => {\n        search && this.search();\n      }\n    );\n  };\n\n  enterCategory = (e) => {\n    e.key === \"Enter\" && this.findCategory(e, true);\n  };\n\n  search = () => {\n    let { categoryList, newCategoryInput } = this.state;\n    categorySearch(categoryList, newCategoryInput).then((filteredCategory) => {\n      this.setState({\n        filteredCategory,\n      });\n    });\n  };\n\n  select = (c) => {\n    this.setState({\n      selectedCategory: c,\n    });\n  };\n\n  setCategory = () => {\n    this.setState(\n      {\n        newCategoryName: this.state.selectedCategory,\n      },\n      () => {\n        this.close(\"category\");\n      }\n    );\n  };\n\n  render() {\n    const {\n      name,\n      keyword,\n      category,\n      newName,\n      foundRelName,\n      foundRecName,\n      newCategoryCode,\n      filteredCategory,\n      selectedCategory,\n      newCategoryName,\n      newOrigin,\n      fetchedKeywords,\n      chosenKeywords,\n      newSetKeywords,\n    } = this.state;\n    const {\n      ogName,\n      ogCategoryCode,\n      ogCategoryName,\n      ogOrigin,\n      ogKeyword,\n      onComplete,\n    } = this.props;\n    return (\n      <AsideContainer>\n        <AsideTitle>\n          <div>(기존) 상품명 :</div>\n          <span>{ogName}</span>\n        </AsideTitle>\n        <AsideTitle>\n          <div>\n            (수정) 상품명 :\n            <button\n              onClick={() => {\n                this.active(\"name\");\n              }}\n            >\n              상품명 추천\n            </button>\n          </div>\n\n          {name && (\n            <Popup closed={() => this.close(\"name\")} name=\"상품명 추천\">\n              <div className=\"nameNKeywordPopup\">\n                <div className=\"popupTitle\">검색단어</div>\n                <div className=\"inputField\">\n                  <input\n                    onChange={(e) => this.findNameInput(e)}\n                    onKeyUp={(e) => this.enterFindNewName(e)}\n                    placeholder=\"검색 단어를 한개씩 입력해주세요\"\n                  ></input>\n                  <button onClick={() => this.findNewName()}>검색</button>\n                </div>\n                <div className=\"related\">\n                  <div className=\"row\">\n                    <div>쇼핑연관</div>\n                    <div>\n                      {foundRelName.length\n                        ? foundRelName.join(\", \")\n                        : \"쇼핑연관 단어가 없습니다\"}\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div>키워드 추천</div>\n                    <div>\n                      {foundRecName.length\n                        ? foundRecName.join(\", \")\n                        : \"추천 키워드가 없습니다\"}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"popupTitle\">제목입력</div>\n                <div className=\"inputField\">\n                  <div>\n                    <input\n                      ref={(ref) => (this.nameInput = ref)}\n                      placeholder={ogName}\n                      onChange={(e) => this.setNewNameInput(e)}\n                    ></input>\n                    <div>(상품명을 한개씩 입력해주세요)</div>\n                  </div>\n                  <button onClick={() => this.setNewName()}>입력</button>\n                </div>\n                <div className=\"buttonContainer\">\n                  <button onClick={() => this.close(\"name\")}>닫기</button>\n                </div>\n              </div>\n            </Popup>\n          )}\n          {newName.length ? (\n            <ol>\n              {newName.map((name) => {\n                return <li>{name}</li>;\n              })}\n            </ol>\n          ) : (\n            <span> 상품명 추천에서 추가하세요</span>\n          )}\n        </AsideTitle>\n        <AsideTitle>\n          <div>\n            (수정) 키워드 :\n            <button\n              onClick={() => {\n                this.active(\"keyword\");\n              }}\n            >\n              키워드 추천\n            </button>\n          </div>\n          {keyword && (\n            <Popup closed={() => this.close(\"keyword\")} name=\"키워드 추천\">\n              <div className=\"nameNKeywordPopup\">\n                <div className=\"popupTitle\">\n                  키워드 추천 (타 브랜드/효과/효능/과장 단어 주의)\n                </div>\n                <div className=\"tableRow\">\n                  <div className=\"popupTitle\">키워드</div>\n                  <div className=\"popupTitle\">모바일 월 평균 클릭 수</div>\n                  <div className=\"popupTitle\">PC 월 평균 클릭 수</div>\n                </div>\n                <div className=\"keywordList\">\n                  {fetchedKeywords.length ? (\n                    fetchedKeywords.map((keyword, idx) => {\n                      return (\n                        <div className=\"tableRow\">\n                          <div>\n                            <input\n                              type=\"checkbox\"\n                              checked={chosenKeywords.includes(\n                                keyword.relKeyword\n                              )}\n                              onChange={() =>\n                                this.chooseKeywords(keyword.relKeyword)\n                              }\n                            ></input>\n                            {keyword.relKeyword}\n                          </div>\n                          <div>{keyword.monthlyAveMobileClkCnt}</div>\n                          <div>{keyword.monthlyAvePcClkCnt}</div>\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <span>추천 키워드를 받아오고 있습니다.</span>\n                  )}\n                </div>\n                <div className=\"chosen\">\n                  <div className=\"chosenKeywords\">\n                    <div>선택한 키워드</div>\n                    <div>{chosenKeywords.join(\", \")}</div>\n                  </div>\n                  <div className=\"chosenButtons\">\n                    <button onClick={() => this.setNewKeywords()}>입력</button>\n                    <button onClick={() => this.close(\"keyword\")}>닫기</button>\n                  </div>\n                </div>\n              </div>\n            </Popup>\n          )}\n          <div>\n            <textarea\n              placeholder={ogKeyword}\n              onChange={(e) => this.changeValue(e, \"SetKeywords\")}\n              value={newSetKeywords}\n            ></textarea>\n          </div>\n        </AsideTitle>\n        <AsideTitle>\n          <div>(수정) 카테고리 코드 :</div>\n          <input\n            placeholder={ogCategoryCode}\n            onChange={(e) => this.changeValue(e, \"CategoryCode\")}\n          ></input>\n        </AsideTitle>\n        <AsideTitle>\n          <div>\n            (수정) 카테고리명 :\n            <button\n              onClick={() => {\n                this.active(\"category\");\n              }}\n            >\n              카테고리 검색\n            </button>\n          </div>\n          {category && (\n            <CategoryPopup\n              close={() => this.close(\"category\")}\n              findCategory={(e) => this.findCategory(e)}\n              enterCategory={(e) => {\n                this.enterCategory(e);\n              }}\n              search={() => {\n                this.search();\n              }}\n              filteredCategory={filteredCategory}\n              select={(c) => {\n                this.select(c);\n              }}\n              selected={selectedCategory}\n              setCategory={() => {\n                this.setCategory();\n              }}\n            />\n          )}\n          <textarea\n            placeholder={ogCategoryName}\n            onChange={(e) => this.changeValue(e, \"CategoryName\")}\n            value={newCategoryName}\n          ></textarea>\n        </AsideTitle>\n        <AsideTitle>\n          <div>(수정) 원산지 :</div>\n          <input\n            placeholder={ogOrigin}\n            onChange={(e) => this.changeValue(e, \"Origin\")}\n          ></input>\n        </AsideTitle>\n        <ModComplete\n          onClick={() => {\n            onComplete({\n              newName,\n              newSetKeywords,\n              newCategoryCode,\n              newCategoryName,\n              newOrigin,\n            });\n          }}\n        >\n          개선 완료\n        </ModComplete>\n      </AsideContainer>\n    );\n  }\n}\n\nexport default withRouter(Modified);\n\nconst AsideContainer = styled.aside`\n  position: fixed;\n  right: 10vw;\n  top: 23vh;\n  width: 33%;\n  border: 1px solid steelblue;\n  background-color: white;\n  padding: 1vh 3vw 0;\n`;\n\nconst AsideTitle = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 15px 0;\n  border-bottom: 1px dashed gray;\n  font-size: 15px;\n  font-weight: 600;\n\n  div:first-of-type {\n    display: flex;\n    flex-direction: column;\n    width: 40%;\n    button {\n      width: 100px;\n      min-height: 30px;\n      margin-top: 10px;\n      border-radius: 5px;\n    }\n  }\n  div:nth-of-type(2) {\n    display: flex;\n    max-width: 250px;\n  }\n  span {\n    font-size: 12px;\n    font-weight: normal;\n    margin-left: 1vw;\n  }\n  input {\n    margin-left: 1vw;\n  }\n  textarea {\n    margin-left: 1vw;\n    height: 50px;\n    min-width: 170px;\n  }\n  ol {\n    padding-left: 32px;\n  }\n`;\n\nconst ModComplete = styled.button`\n  width: 100px;\n  height: 50px;\n  border-radius: 15px;\n  margin: 10px 35%;\n  color: white;\n  font-size: 20px;\n  font-weight: 600;\n  background-color: steelblue;\n`;\n","//can move these variables to .env\n\nexport const justQAPi = \"http://xxx.xxx.x.x:xxxx/\";\n\nexport const crawlingAPI = \"http://localhost:4000/\";\n","import AWS from \"aws-sdk\";\n\n/*change the variables in .env file to Just Q aws s3 bucket info\ncurrently set with dev's test s3 bucket info */\nexport const bucketName = process.env.REACT_APP_BUCKET_NAME;\nexport const bucketRegion = process.env.REACT_APP_BUCKET_REGION;\nexport const IdentityPoolId = process.env.REACT_APP_IDENTITY_POOL_ID;\n\nexport function createS3Album(name) {\n  AWS.config.update({\n    region: bucketRegion,\n    credentials: new AWS.CognitoIdentityCredentials({\n      IdentityPoolId: IdentityPoolId,\n    }),\n  });\n\n  let s3 = new AWS.S3({\n    apiVersion: \"2006-03-01\",\n    params: {\n      Bucket: bucketName,\n    },\n  });\n\n  function createAlbum(albumName) {\n    albumName = albumName.trim();\n    albumName = albumName.replace(\"/\", \"\");\n    if (!albumName) {\n      return alert(\n        \"Album names must contain at least one non-space character.\"\n      );\n    }\n    let albumKey = albumName + \"/\";\n    s3.headObject(\n      {\n        Key: albumKey,\n      },\n      function (err, data) {\n        if (!err) {\n          return alert(\"S3에 같은 상품명으로 이미 생성된 폴더가 존재합니다.\");\n        }\n        if (err.code !== \"NotFound\") {\n          return alert(\n            \"S3에서 폴더를 생성하는데 문제가 생겼습니다: \" + err.message\n          );\n        }\n        s3.putObject(\n          {\n            Key: albumKey,\n          },\n          function (err, data) {\n            if (err) {\n              return alert(\n                \"S3에서 폴더를 생성하는데 문제가 생겼습니다: \" + err.message\n              );\n            }\n            alert(\"성공적으로 S3에 폴더를 생성했습니다\");\n          }\n        );\n      }\n    );\n  }\n  return createAlbum(name);\n}\n\nfunction dataURItoBlob(dataURI) {\n  let binary = atob(dataURI.split(\",\")[1]);\n  let array = [];\n  for (let i = 0; i < binary.length; i++) {\n    array.push(binary.charCodeAt(i));\n  }\n  return new Blob([new Uint8Array(array)], { type: \"image/jpeg\" });\n}\n\nexport function addPhoto2S3(albumName, file, idx) {\n  let fileData = dataURItoBlob(file);\n  let fileName = idx + 1;\n  let albumPhotosKey = albumName + \"/\";\n  let photoKey = albumPhotosKey + fileName;\n  let s3 = new AWS.S3({\n    apiVersion: \"2006-03-01\",\n    params: {\n      Bucket: bucketName,\n    },\n  });\n  let each = s3.upload(\n    {\n      Key: photoKey,\n      ContentType: \"image/jpeg\",\n      Body: fileData,\n      ACL: \"public-read\",\n    },\n    function (err, data) {\n      if (err) {\n        return alert(\n          \"S3에 이미지를 업로드 하는데 문제가 생겼습니다: \",\n          err.message\n        );\n      }\n      return data.Location;\n    }\n  );\n  let promiseEach = each.promise();\n  return promiseEach;\n}\n\nexport function addImgs2S3(imgUrl, data, name, img) {\n  return new Promise(async (resolve, reject) => {\n    let s3Url = [];\n    const urls = await Promise.all(\n      imgUrl.map((file, idx) => {\n        return addPhoto2S3(data[name], file, idx);\n      })\n    );\n    urls.forEach((url) => {\n      s3Url.push(url.Location);\n    });\n    s3Url.length &&\n      s3Url.forEach((el, idx) => {\n        data[img + idx] = `${'\"' + el + '\"'}`;\n      });\n    resolve(data);\n  });\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Modified from \"./components/Modified\";\nimport htmlToImage from \"html-to-image\";\nimport ReactCrop from \"react-image-crop\";\nimport localforage from \"localforage\";\nimport { repo } from \"utils/production\";\nimport { createS3Album, addImgs2S3 } from \"services/cropNSaveService\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport styled from \"styled-components\";\n\nclass Processing extends Component {\n  constructor() {\n    super();\n    this.state = {\n      column: {\n        origin: 4, //Excel column E\n        name: 5, //Excel column F\n        categoryCode: 8, //Excel column I\n        keyword: 42, //Excel column AQ\n        categoryName: 81, //Excel column CD\n      },\n      newColumn: {\n        categoryCode: 82, //Excel column CE\n        categoryName: 83, //Excel column CF\n        keyword: 84, //Excel column CG\n        name: 85, //Excel column CH ~ CL\n        origin: 90, //Excel column CM\n        orgDetailUrl: 91, //Excel column CN\n        relCoord: 92, //Excel column CO\n        croppedImg: 93, //Excel column CP ~ CY\n      },\n      loading: true,\n      raw: null,\n      row: null,\n      data: null,\n      ogDetailUrl: \"\",\n      crop: {\n        aspect: 1 / 1,\n      },\n      croppedImageUrl: [],\n      croppedImageCoord: \"\",\n      uploading: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    const { column } = this.state;\n\n    window.onscroll = () => {\n      window.scrollTo(0, 0);\n    };\n\n    const raw = await localforage.getItem(\"data\");\n    const row = await localforage.getItem(\"row\");\n    const data = raw[row];\n    await this.setState({\n      raw,\n      row,\n      data,\n    });\n\n    let newState = await this.state.data[33]\n      .split(`src=\"`)\n      .join(`src=\"https://cors-anywhere.herokuapp.com/`)\n      .split(`src=h`)\n      .join(`src=https://cors-anywhere.herokuapp.com/h`)\n      .split(\"<img\")\n      .join(\"<img crossOrigin\")\n      .split(\"<IMG\")\n      .join(\"<IMG crossOrigin\");\n\n    let modNode = this.rawHTML;\n    modNode.innerHTML = await newState;\n\n    let len = Array.from(modNode.getElementsByTagName(\"img\")).length;\n    let counter = 0;\n    let incrementCounter = () => {\n      counter++;\n      if (counter === len) {\n        this.html2Image(modNode);\n      }\n    };\n    Array.from(modNode.getElementsByTagName(\"img\")).forEach((img) => {\n      if (img.complete) incrementCounter();\n      else img.addEventListener(\"load\", incrementCounter, false);\n    });\n\n    createS3Album(this.state.data[column.name]);\n  };\n\n  html2Image = (modNode) => {\n    htmlToImage\n      .toPng(modNode)\n      .then((dataUrl) => {\n        document\n          .getElementById(\"detailBox\")\n          .getElementsByTagName(\"img\")[0].src = dataUrl;\n        this.setState({\n          ogDetailUrl: dataUrl,\n          loading: false,\n        });\n        window.onscroll = () => {};\n        document.getElementById(\"detailHTML\").style.display = \"none\";\n      })\n      .catch(function (error) {\n        alert(\"상세페이지를 이미지로 변환하는데 문제가 생겼습니다: \", error);\n      });\n  };\n\n  onImageLoaded = (image) => {\n    this.imageRef = image;\n  };\n\n  onCropComplete = (crop) => {\n    const { croppedImageCoord, croppedImageUrl } = this.state;\n    const { x, y, width, height } = crop;\n    if (width) {\n      if (croppedImageUrl.length >= 10)\n        alert(\"이미지 크롭은 10개까지 가능합니다\");\n      else {\n        this.makeClientCrop(crop);\n        let cropCoord = `[[${x},${y}], [${x + width}, ${y}], [${x + width}, ${\n          y + height\n        }], [${x}, ${y + height}]]`;\n        /* [[],[],[],[]] \n        each arr represents each corner of the newly cropped image, starting from top left, rotating clock-wise\n        each arr has x and y coordinates relative to the top left corner of the whole detail image. */\n\n        let originalCoord = croppedImageCoord ? croppedImageCoord + \", \" : \"\";\n        this.setState({\n          croppedImageCoord: originalCoord + cropCoord,\n        });\n      }\n    }\n  };\n\n  onCropChange = (crop) => {\n    this.setState({ crop });\n  };\n\n  async makeClientCrop(crop) {\n    if (this.imageRef && crop.width && crop.height) {\n      const croppedImageUrl = await this.getCroppedImg(this.imageRef, crop);\n      this.setState({\n        croppedImageUrl: [...this.state.croppedImageUrl, croppedImageUrl],\n      });\n    }\n  }\n\n  async getCroppedImg(image, crop) {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = 1000;\n    canvas.height = 1000;\n    const ctx = canvas.getContext(\"2d\");\n    await ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      1000,\n      1000\n    );\n    return canvas.toDataURL(\"image/jpeg\");\n  }\n\n  deleteCropped = (idx) => {\n    let newUrlArr = [...this.state.croppedImageUrl];\n    let newCoordArr = [...this.state.croppedImageCoord];\n    newUrlArr.splice(idx, 1);\n    newCoordArr.splice(idx, 1);\n    this.setState({\n      croppedImageUrl: newUrlArr,\n      croppedImageCoord: newCoordArr,\n    });\n  };\n\n  deleteAll = () => {\n    this.setState({\n      croppedImageUrl: [],\n      croppedImageCoord: [],\n    });\n  };\n\n  onComplete = async (mod) => {\n    const {\n      data,\n      raw,\n      row,\n      ogDetailUrl,\n      croppedImageUrl,\n      croppedImageCoord,\n      column,\n    } = this.state;\n    const {\n      categoryCode,\n      categoryName,\n      keyword,\n      name,\n      origin,\n      orgDetailUrl,\n      relCoord,\n      croppedImg,\n    } = this.state.newColumn;\n\n    this.setState({\n      uploading: true,\n    });\n\n    let y = Number(window.scrollY);\n    window.onscroll = () => {\n      window.scrollTo(0, y);\n    };\n\n    mod.newCategoryCode && (data[categoryCode] = mod.newCategoryCode);\n    mod.newCategoryName && (data[categoryName] = mod.newCategoryName);\n    mod.newSetKeywords.length && (data[keyword] = mod.newSetKeyword);\n    mod.newName.length &&\n      (await mod.newName.forEach((el, idx) => {\n        data[name + idx] = el;\n      }));\n    mod.newOrigin && (data[origin] = mod.newOrigin);\n    data[orgDetailUrl] = ogDetailUrl;\n    croppedImageCoord && (data[relCoord] = croppedImageCoord);\n\n    await addImgs2S3(croppedImageUrl, data, column.name, croppedImg).then(\n      (modifiedData) => {\n        raw[row] = modifiedData;\n      }\n    );\n\n    localforage.setItem(\"data\", raw, () => {\n      this.setState(\n        {\n          uploading: false,\n        },\n        () => {\n          this.props.history.push(`${repo}/download`);\n        }\n      );\n    });\n  };\n\n  render() {\n    const {\n      column,\n      loading,\n      raw,\n      row,\n      data,\n      crop,\n      croppedImageUrl,\n      uploading,\n    } = this.state;\n\n    return (\n      <ProcessingContainer>\n        {loading && (\n          <Loading scrollY={window.scrollY - 150 + `px`}>\n            <LogoContainer />\n            <span>데이터를 불러오는 중입니다</span>\n          </Loading>\n        )}\n        {uploading && (\n          <Loading scrollY={window.scrollY - 150 + `px`}>\n            <LogoContainer />\n            <span>데이터를 저장하는 중입니다</span>\n          </Loading>\n        )}\n        <WhichRow>\n          총 <span>{raw && raw.length}</span>개 중 <span>{row && row}</span>\n          번째 상품\n        </WhichRow>\n        <Original>\n          <OrigData>\n            <Title>\n              (기존) 상품명 :<span>{data && data[column.name]}</span>\n            </Title>\n            <Title>\n              (기존) 카테고리 코드 :\n              <span>{data && data[column.categoryCode]}</span>\n            </Title>\n            <Title>\n              (기존) 카테고리명 :\n              <span>{data && data[column.categoryName]}</span>\n            </Title>\n            <Title>\n              (기존) 원산지 : <span>{data && data[column.origin]}</span>\n            </Title>\n            <Title>\n              (기존) 키워드 : <span>{data && data[column.keyword]}</span>\n            </Title>\n          </OrigData>\n          <Detail>\n            <Title>\n              상세페이지\n              <span>\n                (드래그 하여 스캔하세요. 스캔된 이미지는 하단에 있습니다.)\n              </span>\n            </Title>\n            <DetailBox>\n              <DetailImg id=\"detailBox\">\n                <ReactCrop\n                  crop={crop}\n                  ruleOfThirds\n                  onImageLoaded={this.onImageLoaded}\n                  onComplete={this.onCropComplete}\n                  onChange={this.onCropChange}\n                />\n              </DetailImg>\n              <DetailHTML id=\"detailHTML\">\n                <div ref={(ref) => (this.rawHTML = ref)}></div>\n              </DetailHTML>\n            </DetailBox>\n            <ScannedImg>\n              <Title>\n                <div>스캔된 이미지 (클릭시 삭제)</div>\n                <button onClick={() => this.deleteAll()}>모두 삭제</button>\n              </Title>\n              {croppedImageUrl &&\n                croppedImageUrl.map((cropped, idx) => {\n                  return (\n                    <img\n                      alt=\"Crop\"\n                      src={cropped}\n                      onClick={() => {\n                        this.deleteCropped(idx);\n                      }}\n                    />\n                  );\n                })}\n            </ScannedImg>\n          </Detail>\n        </Original>\n        <Modified\n          ogName={data && data[column.name]}\n          ogCategoryCode={data && data[column.categoryCode]}\n          ogCategoryName={data && data[column.categoryName]}\n          ogOrigin={data && data[column.origin]}\n          ogKeyword={data && data[column.keyword]}\n          onComplete={(mod) => this.onComplete(mod)}\n        />\n      </ProcessingContainer>\n    );\n  }\n}\n\nexport default withRouter(Processing);\n\nconst ProcessingContainer = styled.div`\n  padding-bottom: 5vh;\n  position: relative;\n`;\n\nconst Loading = styled.div`\n  position: absolute;\n  top: ${(props) => props.scrollY};\n  width: 100vw;\n  height: 115vh;\n  background-color: lightsteelblue;\n  z-index: 100;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  span {\n    font-size: xx-large;\n  }\n\n  @keyframes slidein {\n    from {\n      opacity: 1;\n    }\n    to {\n      opacity: 0;\n    }\n  }\n\n  animation: slidein 2s linear 0s infinite alternate;\n`;\n\nconst LogoContainer = styled.div`\n  width: 350px;\n  height: 200px;\n  background-image: url(\"https://justq.cafe24.com/wp-content/uploads/2020/07/logo_final_w-1.png\");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n`;\n\nexport const WhichRow = styled.h1`\n  margin-top: 3vh;\n  font-size: 34px;\n  font-weight: 600;\n  text-align: center;\n  letter-spacing: 7px;\n  span {\n    color: steelblue;\n  }\n`;\n\nconst Original = styled.div`\n  background-color: white;\n  margin-left: 10vw;\n  margin-bottom: 5vh;\n  width: 40%;\n  padding-top: 3vh;\n`;\n\nconst OrigData = styled.div`\n  margin-bottom: 5vh;\n`;\n\nconst Title = styled.div`\n  margin-bottom: 15px;\n  padding: 0 1vw;\n  font-size: 20px;\n  font-weight: 600;\n  span {\n    font-size: 15px;\n    font-weight: normal;\n    margin-left: 5px;\n  }\n  input {\n    margin-left: 1vw;\n  }\n`;\n\nconst Detail = styled.div`\n  padding-bottom: 1vh;\n`;\n\nconst DetailBox = styled.div`\n  border: 2px dashed rgba(70, 130, 180, 0.6);\n  position: relative;\n  img {\n    width: 100%;\n  }\n`;\n\nconst DetailHTML = styled.div`\n  img {\n    width: 100%;\n  }\n`;\n\nconst DetailImg = styled.div``;\n\nconst ScannedImg = styled.div`\n  ${Title} {\n    margin: 2vh 0;\n    display: flex;\n    justify-content: space-between;\n    button {\n      width: 100px;\n      background-color: #ff6161;\n      border-radius: 5px;\n      color: white;\n    }\n  }\n\n  img {\n    border: 1px solid black;\n    max-width: 150px;\n  }\n`;\n","import * as XLSX from \"xlsx\";\nimport localforage from \"localforage\";\n\nexport async function downloadXLSX(raw) {\n  const workBook = XLSX.utils.book_new(); // create a new blank book\n  const workSheet = XLSX.utils.json_to_sheet(raw, { skipHeader: true });\n  await XLSX.utils.book_append_sheet(workBook, workSheet, \"data\"); // add the worksheet to the book\n  await XLSX.writeFile(workBook, \"[수정본] 데이터.xlsx\"); // initiate a file download in browser\n  await localforage.clear(); // delete locally saved data\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { WhichRow } from \"../Processing\";\nimport localforage from \"localforage\";\nimport { send2ServerAPI } from \"services/apiService\";\nimport { downloadXLSX } from \"services/downloadXLSXService\";\nimport { repo } from \"utils/production\";\nimport styled from \"styled-components\";\n\nclass Download extends Component {\n  constructor() {\n    super();\n    this.state = {\n      raw: [],\n      row: null,\n    };\n  }\n\n  componentDidMount = async () => {\n    const raw = await localforage.getItem(\"data\");\n    const row = await localforage.getItem(\"row\");\n\n    //Headers for newly added columns:\n    raw[0][81] = \"기존카테고리명\";\n    raw[0][82] = \"신규카테고리코드 \";\n    raw[0][83] = \"신규카테고리명\";\n    raw[0][84] = \"신규키워드\";\n    raw[0][85] = \"신규상품명1\";\n    raw[0][86] = \"신규상품명2\";\n    raw[0][87] = \"신규상품명3\";\n    raw[0][88] = \"신규상품명4\";\n    raw[0][89] = \"신규상품명5\";\n    raw[0][90] = \"신규원산지\";\n    raw[0][91] = \"(URL)상세이미지\";\n    raw[0][92] = \"추출한_이미지들의_상대좌표들\";\n    raw[0][93] = \"(URL)추출한_이미지1\";\n    raw[0][94] = \"(URL)추출한_이미지2\";\n    raw[0][95] = \"(URL)추출한_이미지3\";\n    raw[0][96] = \"(URL)추출한_이미지4\";\n    raw[0][97] = \"(URL)추출한_이미지5\";\n    raw[0][98] = \"(URL)추출한_이미지6\";\n    raw[0][99] = \"(URL)추출한_이미지7\";\n    raw[0][100] = \"(URL)추출한_이미지8\";\n    raw[0][101] = \"(URL)추출한_이미지9\";\n    raw[0][102] = \"(URL)추출한_이미지10\";\n\n    this.setState({\n      raw,\n      row,\n    });\n  };\n\n  nextRow = async () => {\n    const { raw, row } = this.state;\n    await localforage.setItem(\"data\", raw);\n    localforage.setItem(\"row\", row + 1, () => {\n      this.props.history.push(`${repo}/processing`);\n    });\n    // re-setting item as the user might choose to download and/or sent2server but still want to continue\n  };\n\n  render() {\n    const { raw, row } = this.state;\n    return (\n      <DownloadContainer>\n        <WhichRow>\n          <div>\n            총<span>{raw.length}</span>개 중 <span>{row}</span>번째 상품\n          </div>\n          <div>작업 완료</div>\n        </WhichRow>\n        <ButtonContainer>\n          <button\n            onClick={() => {\n              this.nextRow();\n            }}\n          >\n            이어서 하기\n          </button>\n          <button\n            onClick={() => {\n              downloadXLSX(raw);\n            }}\n          >\n            그만하고 엑셀로 다운받기\n          </button>\n          <button\n            onClick={() => {\n              send2ServerAPI();\n            }}\n          >\n            그만하고 저스트큐 서버로 보내기\n          </button>\n        </ButtonContainer>\n      </DownloadContainer>\n    );\n  }\n}\n\nexport default withRouter(Download);\n\nconst DownloadContainer = styled.div`\n  width: 70%;\n  margin: 5vh auto 0;\n  padding: 5vh 0;\n  background-color: white;\n  border-radius: 25px;\n  ${WhichRow} {\n    height: 25%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    div {\n      margin: 2vh 0;\n    }\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 3vh;\n  button {\n    width: 30vw;\n    margin: 2vh 0;\n    padding: 13px;\n    background-color: rgba(70, 130, 180, 0.9);\n    border-radius: 25px;\n    font-size: 23px;\n    font-weight: bold;\n    color: white;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <FooterContainer>\n        <span>Just Q 2020.</span>\n      </FooterContainer>\n    );\n  }\n}\n\nexport default withRouter(Footer);\n\nconst FooterContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  width: 100%;\n  height: 5vh;\n  padding: 0 3%;\n  background-color: black;\n  color: white;\n  span {\n    font-size: 15px;\n  }\n`;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Nav from \"components/Nav\";\nimport Intro from \"pages/Intro\";\nimport Signup from \"pages/SignUp\";\nimport Upload from \"pages/Upload\";\nimport Processing from \"pages/Processing\";\nimport Download from \"pages/Download\";\nimport Footer from \"components/Footer\";\nimport { repo } from \"utils/production\";\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Nav />\n        <Switch>\n          <Route exact path={repo} component={Intro} />\n          <Route exact path={`${repo}/signup`} component={Signup} />\n          <Route exact path={`${repo}/upload`} component={Upload} />\n          <Route exact path={`${repo}/processing`} component={Processing} />\n          <Route exact path={`${repo}/download`} component={Download} />\n          <Redirect from=\"*\" to={repo} />\n        </Switch>\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./Routes\";\nimport \"./styles/common.css\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n"],"sourceRoot":""}